name: CI

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop

jobs:
  neon:
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    strategy:
      matrix:
        compiler:
          - gcc
          - clang
        container:
          - suse-qt512
          - suse-qt514
          - suse-qt515
    runs-on: ubuntu-latest
    steps:
      - name: Extract branch name
        id: extract_branch
        shell: bash
        run: |
          if [ -n "${{ github.base_ref }}" ]; then
            echo "##[set-output name=branch;]${{ github.base_ref }}"
          else
            github_ref=${{ github.ref }}
            echo "##[set-output name=branch;]${github_ref##*/}"
          fi
      - name: Qt version identifier
        id: qt_version
        shell: bash
        run: |
          qtverid=`echo "${{ matrix.container }}" | sed -e 's,suse-qt,,g'`
          echo "##[set-output name=id;]${qtverid}"
      - name: Fetch cmake-shared artifact
        uses: liri-infra/fetch-artifact@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          repository: lirios/cmake-shared
          workflow_path: .github/workflows/build.yml
          artifact_name: artifacts-${{ steps.extract_branch.outputs.branch }}
          save_as: cmake-shared.zip
      - name: Fetch fluid artifact
        uses: liri-infra/fetch-artifact@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          repository: lirios/fluid
          workflow_path: .github/workflows/build.yml
          artifact_name: artifacts-${{ matrix.compiler }}-${{ steps.qt_version.outputs.id }}-${{ steps.extract_branch.outputs.branch }}
          save_as: fluid.zip
      - name: Fetch qtgsettings artifact
        uses: liri-infra/fetch-artifact@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          repository: lirios/qtgsettings
          workflow_path: .github/workflows/build.yml
          artifact_name: artifacts-${{ matrix.compiler }}-${{ steps.qt_version.outputs.id }}-${{ steps.extract_branch.outputs.branch }}
          save_as: qtgsettings.zip
      - name: Uncompress artifacts
        run: |
          set -x
          for what in cmake-shared fluid qtgsettings; do
              sudo tar xf ${what}.tar.gz -C /
              rm -f ${what}.zip ${what}.tar.gz
          done
      - uses: actions/checkout@v2
      - name: Build
        run: |
          set -x
          mkdir -p build
          cd build
          if [ "${{ matrix.compiler }}" == "clang" ]; then
            export CC=clang
            export CXX=clang++
            cmake .. -DLIRI_ENABLE_CLAZY:BOOL=ON -DCMAKE_INSTALL_PREFIX=/usr
          else
            cmake .. -DCMAKE_INSTALL_PREFIX=/usr
          fi
          make -j $(getconf _NPROCESSORS_ONLN)
          sudo make install
